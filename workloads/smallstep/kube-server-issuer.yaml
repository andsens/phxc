---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: kube-server-issuer
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: smallstep
      app.kubernetes.io/component: kube-server-issuer
  ingress:
  - toPorts:
    - ports:
      - port: "443"
    fromEntities:
    - kube-apiserver
  egress:
  - toPorts:
    - ports:
      - port: "9000"
    toEndpoints:
    - matchLabels:
        app.kubernetes.io/name: smallstep
        app.kubernetes.io/component: kube-server-ca
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-server-issuer-approver-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-server-issuer-approver-role
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-server-issuer-approver-role
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
rules:
- apiGroups: [cert-manager.io]
  resourceNames: [stepissuers.certmanager.step.sm/*, stepclusterissuers.certmanager.step.sm/*]
  resources: [signers]
  verbs: [approve]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-server-issuer
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-server-issuer-leader-election-rolebinding
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-server-issuer-leader-election-role
subjects:
- kind: ServiceAccount
  name: kube-server-issuer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-server-issuer-leader-election-role
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
rules:
- apiGroups: [""]
  resources: [configmaps]
  verbs: [get, list, watch, create, update, patch, delete]
- apiGroups: [""]
  resources: [configmaps/status]
  verbs: [get, update, patch]
- apiGroups: [""]
  resources: [events]
  verbs: [create]
- apiGroups: [coordination.k8s.io]
  resources: [leases]
  verbs: [get, create, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-server-issuer-manager-rolebinding
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-server-issuer-manager-role
subjects:
- kind: ServiceAccount
  name: kube-server-issuer
  namespace: smallstep
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-server-issuer-proxy-rolebinding
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-server-issuer-proxy-role
subjects:
- kind: ServiceAccount
  name: kube-server-issuer
  namespace: smallstep
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-server-issuer-manager-role
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
rules:
- apiGroups: [""]
  resources: [events]
  verbs: [create, patch]
- apiGroups: [""]
  resources: [secrets]
  verbs: [get, list, watch]
- apiGroups: [cert-manager.io]
  resources: [certificaterequests]
  verbs: [get, list, update, watch]
- apiGroups: [cert-manager.io]
  resources: [certificaterequests/status]
  verbs: [get, patch, update]
- apiGroups: [certmanager.step.sm]
  resources: [stepissuers]
  verbs: [create, delete, get, list, patch, update, watch]
- apiGroups: [certmanager.step.sm]
  resources: [stepclusterissuers]
  verbs: [create, delete, get, list, patch, update, watch]
- apiGroups: [certmanager.step.sm]
  resources: [stepissuers/status]
  verbs: [get, patch, update]
- apiGroups: [certmanager.step.sm]
  resources: [stepclusterissuers/status]
  verbs: [get, patch, update]
- apiGroups: [cert-manager.io]
  resourceNames: [stepissuers.certmanager.step.sm/*, stepclusterissuers.certmanager.step.sm/*]
  resources: [signers]
  verbs: [approve]
- apiGroups: [coordination.k8s.io]
  resources: [leases]
  verbs: [create, get, list, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-server-issuer-proxy-role
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
rules:
- apiGroups: [authentication.k8s.io]
  resources: [tokenreviews]
  verbs: [create]
- apiGroups: [authorization.k8s.io]
  resources: [subjectaccessreviews]
  verbs: [create]
---
apiVersion: v1
kind: Service
metadata:
  name: kube-server-issuer
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
spec:
  selector:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
  ports:
  - name: api
    port: 443
    targetPort: api
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: smallstep-webhook-serving-cert
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
spec:
  commonName: kube-server-issuer.smallstep.svc
  dnsNames:
  - kube-server-issuer.smallstep.svc.cluster.local
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: selfsigned
  secretName: smallstep-webhook-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-server-issuer
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: kube-server-issuer
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: smallstep
      app.kubernetes.io/component: kube-server-issuer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smallstep
        app.kubernetes.io/component: kube-server-issuer
        cluster.local/allow-apiserver-egress: "true"
    spec:
      serviceAccountName: kube-server-issuer
      containers:
      - name: step-issuer
        image: cr.step.sm/smallstep/step-issuer:0.9.1
        securityContext:
          readOnlyRootFilesystem: true
        ports:
        - name: api
          containerPort: 443
      terminationGracePeriodSeconds: 10
